১. তোমাকে যদি বলি একটা স্ট্রিং টাইপের ভেরিয়েবল লিখো। একটা বুলিয়ান টাইপের ভেরিয়েবল লিখো বা একটা নাম্বার টাইপের ভেরিয়েবল লিখো। সেটা কি তুমি লিখতে পারবে? যদি পারো তাহলে ভিজুয়াল ষ্টুডিও কোড খুলে লিখে ফেলো। 



২. তুমি কি জানো কখন let দিয়ে ভেরিয়েবল লিখতে হয়ে আর কখন const দিয়ে ভেরিয়েবল লিখতে হয়। যদি লিখতে পারো তাহলে লিখে ফেলো। এবং যেই যেটা দিয়ে ভেরিয়েবল লিখলে আবার সেটা চেইঞ্জ করা যায়। তাহলে যেটা দিয়ে ভেরিয়েবল ডিক্লেয়ার করলে চেইঞ্জ করা যায়। সেটার মান চেইঞ্জ করে নাও । অর্থাৎ জাস্ট দুইটা ভেরিয়েবল ডিক্লেয়ার করবে let এবং const দিয়ে। তারপর যেকোন একটার ভ্যালু চেইঞ্জ করবে। এই let এবং const মাথা গরম করে দিলে টেনশন নিয়ে না। সামনের মাইলস্টোন এর পরের মাইলস্টোন এ এইটা নিয়ে আরো ডিসকাস করা হবে। 
/----/
In JavaScript, তোমার ভেরিয়েবলগুলো ডিক্লেয়ার করার জন্য let এবং const দ্বারা ব্যবহৃত হয়। let এবং const এর মুখ্য পার্থক্য হল যে let একটা ভেরিয়েবলের মান পরবর্তীতে পরিবর্তন করতে দেয়, বাকিটুকু const একটা ভেরিয়েবলের মান পরবর্তীতে পরিবর্তন করা যায় না। সাধারণত লেট প্রোগ্রাম এর মধ্যে পরিবর্তন হওয়া ভেরিয়েবল গুলো ডিক্লেয়ার করার জন্য ব্যবহৃত হয়, বাকিটুকু const সাধারণত প্রোগ্রাম এর মধ্যে অন্যন্য থাকা মান ভেরিয়েবল গুলো ডিক্লেয়ার ক

/----/



৩. দুইটা ভেরিয়েবল এর মধ্যে যোগ, বিয়োগ, গুণ, ভাগ কিভাবে করতে হয় সেটা কি জানো। অর্থাৎ তুমি কি +, -, *, /, %এইগুলার ব্যবহার জানো। তাহলে নাম্বার টাইপের দুইটা ভেরিয়েবল লিখো তারপর তাদের যোগ করে সেটার মান আরেকটা ভেরিয়েবল এ রাখো। একইভাবে ওই দুইটা ভেরিয়েবল এর মধ্যে বিয়োগ, গুন, ভাগ এবং ভাগশেষ বের করো। 
//
let x = 5;
let y = 3;

// Addition
let z = x + y;
console.log(z); // Output: 8

// Subtraction
z = x - y;
console.log(z); // Output: 2

// Multiplication
z = x * y;
console.log(z); // Output: 15

// Division
z = x / y;
console.log(z); // Output: 1.67

// Modulation
z = x % y;
console.log(z); // Output: 2
//



৪. তুমি কি দুইটা ভেরিয়েবল এরমধ্যে তুলনা করতে পারো। কম্পারিজন করতে পারো। যে দুইটা ভেরিয়েবল এর মধ্যে প্রথমটা সেকেন্ডটা এর চাইতে ছোট, বড়, অসমান, সমান , ছোট বা সমান, বড় বা সমান। এইগুলা চেক করতে পারো। অর্থাৎ <, >, ==, !=, <=, >= চিহ্নগুলা ব্যবহার করতে পারো। তাহলে দুইটা সংখ্যা টাইপের ভেরিয়েবল ডিক্লেয়ার করে তাদেরকে এই ছয়ভাবে তুলনা করে কোড লিখে ফেলো। 
//
let num1 = 10;
let num2 = 20;

if (num1 < num2) {
    console.log(num1 + " is less than " + num2);
} else if (num1 > num2) {
    console.log(num1 + " is greater than " + num2);
} else {
    console.log(num1 + " is equal to " + num2);
}
//

.

৫. তোমার যদি দুইটা শর্ত পূরণ করতে বলে। এবং দুইটা শর্তের মধ্যে দুইটাই পূরণ করতে হবে। তাহলে তুমি কি সেটা চেক করতে পারবে? একইভাবে যদি বলে তুমি দুইটা শর্তের যেকোন একটা পূরণ করতে পারবে। অর্থাৎ তুমি && এবং || এর ব্যবহার করতে পারো কিনা। যদি পারো তাহলে নিজে নিজে এই রকমের কোড লিখে ফেলো। 
//
let x = 5;
let y = 10;

if (x > 0 && y > 0) {
  console.log("Both x and y are positive");
} else if (x > 0 || y > 0) {
  console.log("At least one of x and y is positive");
} else {
  console.log("Both x and y are negative");
}
//



৬. তুমি কি একটা শর্ত পালন করলে একটা কিছু করবে। শর্ত পূরণ না করলে অন্য কিছু একটা করবে এমন কোড লিখতে পারবে। অর্থাৎ তুমি কি if-else এর কোড লিখতে পারবে। পারলে একটা কোড লিখে ফেলো 
//
let num = 5;

if (num > 0) {
  console.log(num + " is a positive number.");
} else {
  console.log(num + " is a negative number.");
}
//

.

৭. তোমাকে যদি বলে একটা while লুপ দিয়ে ৭ থেকে ১৯ পর্যন্ত যতগুলা বিজোড় সংখ্যা আছে সেগুলা দেখাতে। তুমি কি সেটা দেখাতে পারবে? পারলে সেই কোড লিখে ফেলো। 
//
let number = 7;

while (number <= 19) {
  if (number % 2 !== 0) {
    console.log(number);
  }
  number++;
}
//





৮. তোমাকে যদি বলা হয় তুমি একটা array ডিক্লেয়ার করবে। এবং সেটার মধ্যে কয়টা উপাদান আছে সেটা বের করবে হবে। সেই array এর এর মধ্যে চতুর্থ পজিশন এর উপাদান চেইঞ্জ করতে হবে। array এর মধ্যে দুইটা উপাদান যোগ করতে হবে। এবং একটা উপাদান কে বের করে দিতে হবে। তুমি কি সেটা করতে পারবে। 
//
let array = [1, 2, 3, 4, 5];

// Accessing third element of the array
let thirdElement = array[2];
console.log(thirdElement); // Output: 3

// Changing the value of third element
array[2] = array[2] + array[2];
console.log(array[2]); // Output: 6

// Adding two elements of the array
let sum = array[0] + array[1];
console.log(sum); // Output: 3

// Removing an element from the array
array.splice(2, 1);
console.log(array); // Output: [1, 2, 4, 5]
//

.

৯. তুমি কি একটা ফর লুপ দিয়ে কোন একটা array এর সবগুলা উপাদানকে দেখাতে পারবে। সেটা রেগুলার for লুপ হোক বা for of হোক। হলে সেই স্টাইলে একটা কোড লিখে ফেলো। 
//
const numbers = [1, 2, 3, 4, 5];

for (let i = 0; i < numbers.length; i++) {
  console.log(numbers[i]);
}
//
const numbers = [1, 2, 3, 4, 5];

for (const number of numbers) {
  console.log(number);
}
//



১০. তোমাকে যদি বলা হয়। একটা array এর মধ্যে ৮০ এর চাইতে বড় সংখ্যা থাকলে সেগুলাকে console log করে দেখাতে সেটা কি তুমি পারবে? তাহলে তুমি সেই কোড করে ফেলো //
const arr = [20, 50, 60, 70, 90, 100, 120, 130];

arr.forEach(function(num) {
  if (num > 80) {
    console.log(num);
  }
});
//

.

১১. তিনটা সংখ্যার গুনফল বের করে ফাইনাল রেজাল্ট আউটপুট হিসেবে রিটার্ন করতে হবে। তুমি কি সেই কোড লিখতে পারবে। যদি পারো তাহলে সেই কোড লিখে ফেলো। 
//
function findProduct(num1, num2, num3) {
    let product = num1 * num2 * num3;
    return product;
}

let result = findProduct(2, 4, 5);
console.log(result);
//



১২. একটা অবজেক্ট ডিক্লেয়ার করবে। সেটাতে তিনটা প্রপার্টি থাকবে। এবং কোন একটা প্রোপার্টি এর মান চেইঞ্জ করবা। 
//
let object = {
  property1: "value1",
  property2: "value2",
  property3: "value3"
};

object.property2 = "newValue2";
console.log(object);
//
<--------------------------------->

প্রব্লেম সলভিং চেকলিস্ট/সেলফ এসেসমেন্ট : 



১. সিম্পল একটা ফাংশন লিখতে হবে। যেটার নাম হবে feetToInch এবং এই ফাংশন ইনপুট হিসেবে নিবে feet আর রিটার্ন করবে inch । অর্থাৎ এই ফাংশনকে কোন একটা ফিট বলে দিলে সে রিটার্ন হিসেবে বলে দিবে কত ইঞ্চি হয়। 
//
function feetToInch(feet) {
  return feet * 12;
}
//

২. একদম ফাংশন এর নাম হুবহু centimeterToMeter নাম দিয়ে একটা ফাংশন লিখবে। এই ফাংশনে ইনপুট হিসাবে কেউ সেন্টিমিটার দিবে আর সেই সেন্টিমিটার কে মিটার এ কনভার্ট করে রেজাল্ট রিটার্ন করবে। 
//
function centimeterToMeter(centimeter) {
  return centimeter / 100;
}
//



.

৩. আরেকটা ফাংশন লিখবে যেটার নাম লিখবে। যেই ফাংশনের নাম হবে paperRequirements এই ফাংশনের প্যারামিটার হিসেবে তিনটা প্যারামিটার হবে। প্রথম প্যারামিটার হবে তুমি প্রথম বই কত কপি ছাপাতে চাও। সেকেন্ড প্যারামিটার হবে তুমি সেকেন্ড বই কত কপি ছাপাতে চাও। আর থার্ড প্যারামিটার হবে তুমি থার্ড বই কত কপি ছাপাতে চাও। অর্থাৎ কোন বই এর কত কপি ছাপানো হবে সেটাই প্যারামিটার হিসেবে নিবে। 

এইবার ভালো করে খেয়াল করো। 

প্রথম বই ছাপানোর জন্য পৃষ্ঠা লাগবে ১০০ টা 

সেকেন্ড বই ছাপানোর জন্য পৃষ্ঠা লাগবে ২০০ টা 

তৃতীয় বই ছাপানোর জন্য পৃষ্ঠা লাগবে ৩০০ টা 



এখন তোমার কাজ হচ্ছে paperRequirements নামক ফাংশন লিখে ফেলা যাতে। সেই ফাংশনকে কল করে কোন বই এর কত কপি লাগবে বলে দিবে প্যারামিটার হিসেবে। আর ফাংশন হিসাব করে বলে দিবে তোমার সর্বমোট কতপৃষ্ঠা কাগজ লাগবে। 

উত্তর হিসেবে সংখ্যা রিটার্ন করবে। 
/----/
function paperRequirements(firstBook, secondBook, thirdBook) {
  let totalPages = (firstBook * 100) + (secondBook * 200) + (thirdBook * 300);
  return totalPages;
}

let firstBookCopies = 3;
let secondBookCopies = 5;
let thirdBookCopies = 2;

let requiredPages = paperRequirements(firstBookCopies, secondBookCopies, thirdBookCopies);
console.log("Total number of required pages: ", requiredPages);


/-------/






৪. একটা ফাংশন লিখবে। এই ফাংশনের নাম হবে bestFriend তারপর সেই ফাংশনে ইনপুট প্যারামিটার হিসেবে একটা array নিবে। সেই array এর মধ্যে তোমার সব ফ্রেন্ডের নাম থাকবে। এখন তোমার কাজ হচ্ছে যে ফ্রেন্ড এর নাম সবচেয়ে বড় সেই ফ্রেন্ড এর নাম রিটার্ন করে দেয়া। এই ক্ষেত্রে তুমি নামটা অর্থাৎ ফ্রেন্ডের নাম (স্ট্রিং) রিটার্ন করতে হবে। 
//
function bestFriend(friends) {
let longestName = "";
for (let i = 0; i < friends.length; i++) {
if (friends[i].length > longestName.length) {
longestName = friends[i];
}
}
return longestName;
}

let friends = ["John", "Sarah", "Michael"];
let result = bestFriend(friends);
console.log(result); 
// Output: "Michael"

//



.

৫. এইটা একটু ট্রিকি হতে পারে। একটা array এর মধ্যে অনেকগুলা সংখ্যা থাকবে। তোমার কাজ হচ্ছে সংখ্যা গুলা একটার পর একটা করে চেক করা। এবং সংখ্যা গুলা যদি পজিটিভ সংখ্যা হয়।
 অর্থাৎ শূন্য বা শূন্যের চাইতে বড় হয় তাহলে সেগুলাকে কোন একটা array এর মধ্যে রাখবে। আর যদি নেগেটিভ সংখ্যা হয়। 
তাহলে লুপটা স্টপ করে দিবে। এবং লুপ বন্ধ করার আগ পর্যন্ত যতগুলা পজিটিভ সংখ্যা পাওয়া গেছে। সেগুলা রিটার্ন করে দিবে।
 //
function positiveNumbers(numbers) {
  let positive = [];
  for (let i = 0; i < numbers.length; i++) {
    if (numbers[i] > 0) {
      positive.push(numbers[i]);
    } else {
      break;
    }
  }
  return positive;
}
//